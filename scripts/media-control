#!/bin/sh

# $1: Error message
error () {
    notify-send "Error: media-control" "$1"
    exit 1
}

# $@: Arguments to forward to the player
control () {
    playerctl --player="$(current-media-player)" "$@"
}

# $1: "-" | "+"
seek () {
    mkdir --parents "${MY_DOTFILES_REPO}/state"
    lockfile="${MY_DOTFILES_REPO}/state/lock-media-control-seek"
    [ -f "${lockfile}" ] && return
    touch "${lockfile}"
    case $(control status) in
        Paused)
            control position "20$1";;
        Playing)
            control position "5$1";;
        *)
            error "Invalid player state";;
    esac
    sleep 0.5
    rm "${lockfile}"
}

toggle () {
    mkdir --parents "${MY_DOTFILES_REPO}/state"
    lockfile="${MY_DOTFILES_REPO}/state/media-control-toggle-lock"
    if [ -f "${lockfile}" ]; then
        playerctl --all-players pause &
        bluetoothctl disconnect &
        slock
    else
        {
            touch "${lockfile}"
            sleep 1
            rm "${lockfile}"
        } &
        if [ "$(control status)" = "Paused" ]; then
            control position 5-
            control play
        else
            control pause
        fi
    fi
}

show_current_track_title () {
    [ -z "${DISPLAY}" ] && return
    if title=$(control metadata title); then
        notify-send --replace-id=999999999 --expire-time=750 "Now playing" "${title}"
    fi
}

is_at_track_beginning () {
    [ "$(control position | cut --delimiter=. --fields=1)" -lt 10 ]
}

previous () {
    if is_at_track_beginning; then
        control previous
    else
        control position 0
    fi
    show_current_track_title
}

next () {
    control next
    show_current_track_title
}

case $1 in
    play|pause)
        toggle;;
    next)
        next;;
    previous)
        previous;;
    forward)
        seek +;;
    rewind)
        seek -;;
    *)
        error "Invalid argument";;
esac

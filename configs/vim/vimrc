set nocompatible                    " Disable vi compatibility. Keep at the top.
set background=dark                 " Dark mode
set encoding=utf-8                  " Unicode
set ttimeout                        " Insert mode escape sequence timeout
set ttimeoutlen=100                 " Short insert mode escape sequence timeout
set hlsearch                        " Highlight search matches
set incsearch                       " Interactive search highlight
set ignorecase                      " Enable case insensitive search
set relativenumber                  " Enable relative line numbers
set number                          " Absolute line number for current line
set smartindent                     " Automatically indent new lines
set tabstop=4                       " Tab character width
set shiftwidth=0                    " Use tabstop value for indentation
set list                            " Render whitespace according to listchars
set listchars=tab:\|\ ,trail:_      " Whitespace rendering settings
set expandtab                       " Insert spaces in place of tabs
set scrolloff=10                    " Vertical scrolloff
set sidescrolloff=40                " Horizontal scrolloff
set virtualedit=block               " Allow going past the end of line in visual block mode
set completeopt=menuone,noselect    " Completion options
set wildmenu                        " Show command line completions list
set wildoptions=pum                 " Popup wildmenu
set path+=**                        " Recursively find in subdirectories
set grepprg=rg\ --vimgrep\ --hidden " Use ripgrep for :grep
set shortmess+=I                    " Disable intro message
set shortmess+=c                    " Disable insert mode completion messages
set viminfo=                        " Disable viminfo
set nomodeline                      " Disable unnecessary feature
set laststatus=2                    " Always show status line
set nowrap                          " Do not wrap long lines
set nowrapscan                      " Do not wrap searches around the end of file
set splitkeep=topline               " Do not scroll when resizing horizontal splits
set nostartofline                   " Do not move the the cursor to the start of the line on vertical movements
set noshowmode                      " Do not show current mode
let g:netrw_dirhistmax=0            " Disable Netrw directory history
let g:netrw_banner=0                " Disable Netrw help banner
let g:netrw_list_hide="^\\.\\/$"    " Disable current directory
let g:netrw_cursor=0                " Disable cursorline in Netrw
let g:mapleader=" "                 " Set the leader key
syntax enable                       " Enable syntax highting

" Leader by itself does nothing
nnoremap <leader> <nop>
xnoremap <leader> <nop>

" Toggle search case sensitivity
nnoremap <leader>i <cmd>set ignorecase!<cr>

" Command shortcuts
nnoremap <leader>f :find<space>
nnoremap <leader>? :help<space>

" Toggle search highlight
nnoremap <leader>h <cmd>set hlsearch!<cr>

" Toggle line number visibility
nnoremap <leader>n <cmd>set number!<cr><cmd>set relativenumber!<cr>

" Open a terminal buffer in a new tab
nnoremap <leader>t <cmd>tab terminal<cr>

" Easier normal mode from terminal mode
tnoremap <esc><esc> <c-\><c-n>

" Easier alternate file access
nnoremap M <c-^>

" Clear current search highlight
nnoremap <esc> <cmd>nohlsearch<cr>

" Explore with Netrw
nnoremap <leader>e     <cmd>Explore<cr>
nnoremap <leader>E     <cmd>Sexplore<cr>
nnoremap <leader><c-e> <cmd>Texplore<cr>

" Tab controls
nnoremap <c-t> <cmd>tabnew<cr>
nnoremap <c-q> <cmd>tabclose<cr>
nnoremap H     <cmd>tabprevious<cr>
nnoremap L     <cmd>tabnext<cr>
nnoremap <c-h> <cmd>tabmove -1<cr>
nnoremap <c-l> <cmd>tabmove +1<cr>

nnoremap <leader>1 1gt
nnoremap <leader>2 2gt
nnoremap <leader>3 3gt
nnoremap <leader>4 4gt
nnoremap <leader>5 5gt
nnoremap <leader>6 6gt
nnoremap <leader>7 7gt
nnoremap <leader>8 8gt
nnoremap <leader>9 9gt
nnoremap <leader>0 g<Tab>

" Quickfix controls
nnoremap <leader>d <cmd>copen<cr><c-w>p
nnoremap <leader>D <cmd>copen<cr>
nnoremap <leader>c <cmd>cclose<cr>
nnoremap <c-j>     <cmd>cnext<cr>zz
nnoremap <c-k>     <cmd>cprevious<cr>zz

" Popup-menu controls
inoremap <expr> <c-j> pumvisible() ? "<c-n>" : "<c-j>"
cnoremap <expr> <c-j> pumvisible() ? "<c-n>" : "<c-j>"
inoremap <expr> <c-k> pumvisible() ? "<c-p>" : "<c-k>"
cnoremap <expr> <c-k> pumvisible() ? "<c-p>" : "<c-k>"
inoremap <expr> <c-c> pumvisible() ? "<c-e>" : "<c-c>"
cnoremap <expr> <c-c> pumvisible() ? "<c-e>" : "<c-c>"
inoremap <expr> <cr>  pumvisible() ? "<c-y>" : "<cr>"

" Move selected lines up and down
xnoremap <silent> <c-k> :move '<-2<cr>gv=gv
xnoremap <silent> <c-j> :move '>+1<cr>gv=gv

" Resize windows
nnoremap ( <cmd>horizontal resize -1<cr>
nnoremap ) <cmd>horizontal resize +1<cr>
nnoremap < <cmd>vertical resize -2<cr>
nnoremap > <cmd>vertical resize +2<cr>

" Stay in visual mode on indent/dedent
xnoremap < <gv
xnoremap > >gv

" Write and quit
nnoremap <leader>w <cmd>write<cr>
nnoremap <leader>q <cmd>quit<cr>

" Normal mode actions in insert mode
inoremap <c-e> <c-o><c-e>
inoremap <c-y> <c-o><c-y>
inoremap <c-z> <c-o>zz

" Do not save paragraph jumps to the jumplist
nnoremap { <cmd>execute ("keepjumps normal!" . v:count1 . "{zz")<cr>
xnoremap { <cmd>execute ("keepjumps normal!" . v:count1 . "{zz")<cr>
nnoremap } <cmd>execute ("keepjumps normal!" . v:count1 . "}zz")<cr>
xnoremap } <cmd>execute ("keepjumps normal!" . v:count1 . "}zz")<cr>

" Try to keep the cursor centered
nnoremap G Gzz
xnoremap G Gzz
nnoremap n nzz
xnoremap n nzz
nnoremap N Nzz
xnoremap N Nzz
nnoremap <c-d> <c-d>zz
xnoremap <c-d> <c-d>zz
nnoremap <c-u> <c-u>zz
xnoremap <c-u> <c-u>zz
nnoremap <c-o> <c-o>zz
xnoremap <c-o> <c-o>zz
nnoremap <c-i> <c-i>zz
xnoremap <c-i> <c-i>zz

" Yank to the end of line (behave like C and D)
nnoremap Y y$

" Highlighting for 'listchars' and nonprintable characters
highlight SpecialKey ctermfg=darkgrey

" Enable builtin man plugin
runtime ftplugin/man.vim

function s:ApplyHelpBufferOptions()
    nnoremap <buffer> J 3<c-e>
    nnoremap <buffer> K 3<c-y>
    nnoremap <buffer> q <cmd>quit<cr>
endfunction

function s:ApplyQuickfixOptions()
    nnoremap <buffer> J j<cr>zz<c-w>p
    nnoremap <buffer> K k<cr>zz<c-w>p
    nnoremap <buffer> q <cmd>quit<cr>
endfunction

function s:OfferCompletions()
    if !pumvisible() && state('m') == '' && v:char =~ "[a-z_]"
        call feedkeys("\<c-x>\<c-n>")
    endif
endfunction

autocmd FileType qf call s:ApplyQuickfixOptions()
autocmd FileType help,man call s:ApplyHelpBufferOptions()
autocmd FileType gitcommit setlocal colorcolumn=50
autocmd TerminalOpen * setlocal nonumber norelativenumber
autocmd InsertCharPre * call s:OfferCompletions()
